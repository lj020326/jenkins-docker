
########################
## EXPANDING VARIABLES FROM DOCKER SECRETS
## REFERENCES:
##   https://github.com/rbdiang/docker-secrets-example
##   https://gist.github.com/bvis/b78c1e0841cfd2437f03e20c1ee059fe
##   https://github.com/DevilaN/docker-entrypoint-example
##   https://stackoverflow.com/questions/48094850/docker-stack-setting-environment-variable-from-secrets
## source: https://gist.github.com/soloman1124/cdcf8e603f3064b2b49d614c6ed45a92

: ${ENV_SECRETS_DIR:=/run/secrets}

beginswith() { case $2 in "$1"*) true;; *) false;; esac; }

env_secret_debug()
{
    if [ ! -z "$ENV_SECRETS_DEBUG" ]; then
        echo -e "\033[1m$@\033[0m"
    fi
}

# usage: env_secret_expand VAR
#    ie: env_secret_expand 'XYZ_DB_PASSWORD'
# (will check for "$XYZ_DB_PASSWORD" variable value for a placeholder that defines the
#  name of the docker secret to use instead of the original value. For example:
# XYZ_DB_PASSWORD=dksec://my-db.secret
dksec_expand() {
    for env_var in $(printenv | sort)
    do
        value=$(echo $env_var | cut -d"=" -f2)
        key=$(echo $env_var | cut -d"=" -f1)
        if beginswith "dksec://" $value; then
            secret_name=${value#"dksec://"}
            secret_file="${ENV_SECRETS_DIR}/${secret_name}"
            env_secret_debug "Secret for $key: $secret_file"
            if [ -f "$secret_file" ]; then
                env_secret_debug "File found: $secret_file"
                secret=$(cat "${secret_file}")
                export "$key"="$secret"
            else
                env_secret_debug "Secret file does not exist! $secret_file"
            fi
        elif beginswith "dkseckey://" $value; then
            secret_name=${value#"dkseckey://"}
            secret_file="${ENV_SECRETS_DIR}/${secret_name}"
            env_secret_debug "Secret for $key: $secret_file"
            if [ -f "$secret_file" ]; then
                env_secret_debug "File found: $secret_file"
                ## ref: https://stackoverflow.com/a/74481066
                ## ref: https://stackoverflow.com/a/42275142
                ## ref: https://stackoverflow.com/questions/7427262/how-to-read-a-file-into-a-variable-in-shell
#                read -rd '' secret <${secret_file} || :
#                export "$key"="$secret"
#                export "$key"="\"$secret\""
                ## ref: https://github.com/jenkinsci/configuration-as-code-plugin/tree/master/demos/credentials#example
                export "$key"="$secret_file"
            else
                env_secret_debug "Secret file does not exist! $secret_file"
            fi
        fi
    done

    if [ ! -z "$ENV_SECRETS_DEBUG" ]; then
        echo -e "\n\033[1mExpanded environment variables\033[0m"
        #printenv | sort
        export -p | sed 's/declare -x //'
    fi
}

dksec_expand
